<?xml version='1.0' encoding='UTF-8'?>
<NineML xmlns="http://nineml.incf.org/9ML/0.3"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://nineml.incf.org/9ML/0.3 ../NineML_v0.3.xsd">

  <ComponentClass name="IaF">

    <Parameter name="tau" dimension='time'/>       <!-- membrane constant -->
    <Parameter name="theta" dimension='voltage'/>  <!-- firing threshold -->
    <Parameter name="tau_rp" dimension='time'/>    <!-- refractory period -->
    <Parameter name="Vreset" dimension='voltage'/> <!-- reset potential -->
    <Parameter name="R" dimension='resistance'/>   <!-- membrane resistance -->

    <Parameter name="Iext" dimension='current'/>

    <AnalogReducePort name="Isyn" reduce_op="+" dimension='current'/>
    <AnalogSendPort name="V" dimension='voltage'/>
    <AnalogSendPort name="t_rpend" dimension='time'/>

    <EventSendPort name="spikeOutput"/>
    <EventSendPort name="refractoryEnd"/>

    <Dynamics>

        <StateVariable name="V" dimension="voltage"/>

        <Regime name="subthresholdRegime">
          
          <TimeDerivative variable="V">
            <MathInline> ( - V + (R * (Iext + Isyn))) / tau </MathInline>
          </TimeDerivative>

          <OnCondition target_regime="refractoryRegime">
            
            <Trigger>
              <MathInline>V - theta </MathInline>
            </Trigger>
            
            <StateAssignment variable="t_rpend" >
              <MathInline> t + tau_rp </MathInline>
            </StateAssignment>
            
            <StateAssignment variable="V" >
              <MathInline> Vreset </MathInline>
            </StateAssignment>
            
            <EventOut port="spikeOutput" />
            
          </OnCondition>
          
        </Regime>
          
        <Regime name="refractoryRegime" >
            
          <TimeDerivative variable="V" >
            <MathInline> 0.0 </MathInline>
          </TimeDerivative>

          <OnCondition target_regime="subthresholdRegime">
            
            <Trigger>
              <MathInline>t - t_rpend</MathInline>
            </Trigger>
            
            <EventOut port="refractoryEnd" />
            
          </OnCondition>
          
        </Regime>
          
    </Dynamics>

  </ComponentClass>
</NineML>
